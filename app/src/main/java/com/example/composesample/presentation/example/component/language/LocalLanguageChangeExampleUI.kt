package com.example.composesample.presentation.example.component.language

import android.content.Intent
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.Button
import androidx.compose.material.ButtonDefaults
import androidx.compose.material.Card
import androidx.compose.material.Icon
import androidx.compose.material.IconButton
import androidx.compose.material.Text
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.ArrowBack
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.composesample.R
import com.example.composesample.util.LanguageManager

@Composable
fun LocalLanguageChangeExampleUI(onBackButtonClick: () -> Unit) {
    val context = LocalContext.current

    // LanguageManagerÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Ïñ∏Ïñ¥ ÏÑ§Ï†ï Í¥ÄÎ¶¨
    var isKorean by remember {
        mutableStateOf(LanguageManager.getLanguagePreference(context))
    }

    // Ïñ∏Ïñ¥ Î≥ÄÍ≤Ω Ìï®Ïàò
    fun changeLanguage(useKorean: Boolean) {
        LanguageManager.saveLanguagePreference(context, useKorean)
        isKorean = useKorean
    }

    // ÌòÑÏû¨ ÏÑ§Ï†ïÏóê Îî∞Î•∏ Context ÏÉùÏÑ±
    val localizedContext = remember(isKorean) {
        LanguageManager.createLocalizedContext(context)
    }

    // ÌôîÎ©¥ Ï†ÑÌôò ÏÉÅÌÉú Í¥ÄÎ¶¨
    var showOtherScreen by remember { mutableStateOf(false) }

    // Îã§Î•∏ ÌôîÎ©¥ÏùÑ Î≥¥Ïó¨Ï£ºÎäî Í≤ΩÏö∞
    if (showOtherScreen) {
        LanguageTestScreen {
            showOtherScreen = false
        }
        return
    }

    LazyColumn {
        stickyHeader {
            Box(
                modifier = Modifier
                    .background(color = Color.White)
                    .padding(top = 10.dp, bottom = 10.dp)
            ) {
                Row(modifier = Modifier.fillMaxWidth()) {
                    IconButton(
                        onClick = {
                            onBackButtonClick.invoke()
                        }
                    ) {
                        Icon(Icons.Filled.ArrowBack, contentDescription = "Îí§Î°úÍ∞ÄÍ∏∞")
                    }

                    Text(
                        modifier = Modifier
                            .align(Alignment.CenterVertically)
                            .padding(start = 8.dp),
                        text = localizedContext.getString(R.string.local_language_title),
                        fontSize = 18.sp,
                        fontWeight = FontWeight.Bold
                    )
                }
            }
        }

        item {
            Spacer(modifier = Modifier.height(20.dp))

            // ÌòÑÏû¨ Ïñ∏Ïñ¥ ÌëúÏãú Ïπ¥Îìú
            Card(
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(8.dp),
                backgroundColor = Color.White,
                elevation = 4.dp,
                shape = RoundedCornerShape(12.dp)
            ) {
                Column(
                    modifier = Modifier.padding(16.dp)
                ) {
                    Text(
                        text = localizedContext.getString(R.string.current_language),
                        fontSize = 16.sp,
                        fontWeight = FontWeight.Bold,
                        modifier = Modifier.padding(bottom = 8.dp),
                        color = Color.Black
                    )

                    Text(
                        text = if (isKorean) "ÌïúÍµ≠Ïñ¥" else "English",
                        fontSize = 14.sp,
                        color = Color.Gray
                    )
                }
            }

            Spacer(modifier = Modifier.height(16.dp))

            // Ïñ∏Ïñ¥ Î≥ÄÍ≤Ω Î≤ÑÌäº
            Card(
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(8.dp),
                backgroundColor = Color.White,
                elevation = 4.dp,
                shape = RoundedCornerShape(12.dp)
            ) {
                Column(
                    modifier = Modifier.padding(16.dp),
                    horizontalAlignment = Alignment.CenterHorizontally
                ) {
                    Button(
                        onClick = { changeLanguage(!isKorean) },
                        modifier = Modifier
                            .fillMaxWidth()
                            .height(50.dp),
                        colors = ButtonDefaults.buttonColors(
                            backgroundColor = Color(0xFF2196F3),
                            contentColor = Color.White
                        ),
                        shape = RoundedCornerShape(8.dp)
                    ) {
                        Text(
                            text = localizedContext.getString(R.string.language_toggle_button),
                            fontSize = 16.sp,
                            fontWeight = FontWeight.Medium
                        )
                    }

                    Spacer(modifier = Modifier.height(12.dp))

                    Text(
                        text = "ÌòÑÏû¨: ${if (isKorean) "ÌïúÍµ≠Ïñ¥" else "English"} ‚Üí " +
                                "Î≥ÄÍ≤ΩÎê† Ïñ∏Ïñ¥: ${if (!isKorean) "ÌïúÍµ≠Ïñ¥" else "English"}",
                        fontSize = 12.sp,
                        color = Color.Gray
                    )
                }
            }

            Spacer(modifier = Modifier.height(16.dp))

            // ÌÖåÏä§Ìä∏ Î≤ÑÌäºÎì§
            Card(
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(8.dp),
                backgroundColor = Color(0xFFE1F5FE),
                elevation = 4.dp,
                shape = RoundedCornerShape(12.dp)
            ) {
                Column(
                    modifier = Modifier.padding(16.dp)
                ) {
                    Text(
                        text = "üß™ Ïñ∏Ïñ¥ ÏÑ§Ï†ï Ïú†ÏßÄ ÌÖåÏä§Ìä∏",
                        fontSize = 16.sp,
                        fontWeight = FontWeight.Bold,
                        color = Color(0xFF0277BD),
                        modifier = Modifier.padding(bottom = 12.dp)
                    )

                    // Îã§Î•∏ ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô Î≤ÑÌäº
                    Button(
                        onClick = { showOtherScreen = true },
                        modifier = Modifier
                            .fillMaxWidth()
                            .height(45.dp),
                        colors = ButtonDefaults.buttonColors(
                            backgroundColor = Color(0xFF03A9F4),
                            contentColor = Color.White
                        ),
                        shape = RoundedCornerShape(8.dp)
                    ) {
                        Text(
                            text = "üì± Îã§Î•∏ ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô (Í∞ôÏùÄ Activity)",
                            fontSize = 14.sp,
                            fontWeight = FontWeight.Medium
                        )
                    }

                    Spacer(modifier = Modifier.height(8.dp))

                    // Îã§Î•∏ ActivityÎ°ú Ïù¥Îèô Î≤ÑÌäº
                    Button(
                        onClick = {
                            val intent = Intent(context, LanguageTestActivity::class.java)
                            context.startActivity(intent)
                        },
                        modifier = Modifier
                            .fillMaxWidth()
                            .height(45.dp),
                        colors = ButtonDefaults.buttonColors(
                            backgroundColor = Color(0xFF00BCD4),
                            contentColor = Color.White
                        ),
                        shape = RoundedCornerShape(8.dp)
                    ) {
                        Text(
                            text = "üöÄ ÏÉàÎ°úÏö¥ ActivityÎ°ú Ïù¥Îèô",
                            fontSize = 14.sp,
                            fontWeight = FontWeight.Medium
                        )
                    }
                }
            }

            Spacer(modifier = Modifier.height(16.dp))

            // ÏÉòÌîå ÌÖçÏä§Ìä∏ Ïπ¥Îìú
            Card(
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(8.dp),
                backgroundColor = Color(0xFFF5F5F5),
                elevation = 4.dp,
                shape = RoundedCornerShape(12.dp)
            ) {
                Column(
                    modifier = Modifier.padding(16.dp)
                ) {
                    Text(
                        text = localizedContext.getString(R.string.welcome_message),
                        fontSize = 24.sp,
                        fontWeight = FontWeight.Bold,
                        color = Color(0xFF2196F3),
                        modifier = Modifier.padding(bottom = 8.dp)
                    )

                    Text(
                        text = localizedContext.getString(R.string.sample_content),
                        fontSize = 16.sp,
                        color = Color.Black,
                        modifier = Modifier.padding(bottom = 8.dp)
                    )

                    Text(
                        text = localizedContext.getString(R.string.description_text),
                        fontSize = 14.sp,
                        color = Color.Gray
                    )
                }
            }

            Spacer(modifier = Modifier.height(16.dp))

            // ÏÑ§Î™Ö Ïπ¥Îìú
            Card(
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(8.dp),
                backgroundColor = Color(0xFFE8F5E8),
                elevation = 4.dp,
                shape = RoundedCornerShape(12.dp)
            ) {
                Column(
                    modifier = Modifier.padding(16.dp)
                ) {
                    Text(
                        text = "Íµ¨ÌòÑ Î∞©Î≤ï",
                        fontSize = 16.sp,
                        fontWeight = FontWeight.Bold,
                        color = Color(0xFF4CAF50),
                        modifier = Modifier.padding(bottom = 8.dp)
                    )

                    Text(
                        text = "1. SharedPreferencesÎ°ú Ïñ∏Ïñ¥ ÏÑ§Ï†ï Ï†ÄÏû•\n" +
                                "2. Configuration.setLocale()Î°ú Î°úÏºÄÏùº Î≥ÄÍ≤Ω\n" +
                                "3. createConfigurationContext()Î°ú ÏÉà Ïª®ÌÖçÏä§Ìä∏ ÏÉùÏÑ±\n" +
                                "4. ÏÉà Ïª®ÌÖçÏä§Ìä∏ÏóêÏÑú strings.xml Î¶¨ÏÜåÏä§ Í∞ÄÏ†∏Ïò§Í∏∞",
                        fontSize = 14.sp,
                        color = Color(0xFF2E7D32),
                        lineHeight = 20.sp
                    )
                }
            }

            Spacer(modifier = Modifier.height(20.dp))
        }
    }
} 