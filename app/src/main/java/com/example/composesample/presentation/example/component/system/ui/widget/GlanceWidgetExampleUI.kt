package com.example.composesample.presentation.example.component.system.ui.widget

import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.PaddingValues
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.material.Card
import androidx.compose.material.Surface
import androidx.compose.material.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.composesample.presentation.MainHeader

/**
 * Jetpack Compose for Widgets with Glance Example
 *
 * GlanceÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Jetpack ComposeÎ°ú Android ÏúÑÏ†ØÏùÑ ÎßåÎìúÎäî Î∞©Î≤ï:
 * 1. GlanceAppWidget - ÏúÑÏ†ØÏùò UI Íµ¨ÏÑ±
 * 2. GlanceAppWidgetReceiver - ÏúÑÏ†Ø ÎùºÏù¥ÌîÑÏÇ¨Ïù¥ÌÅ¥ Í¥ÄÎ¶¨
 * 3. Manifest Îì±Î°ù Î∞è Î©îÌÉÄÎç∞Ïù¥ÌÑ∞ ÏÑ§Ï†ï
 * 4. Dependency Injection Î∞è Intent Ï≤òÎ¶¨
 */
@Composable
fun GlanceWidgetExampleUI(
    onBackEvent: () -> Unit
) {
    Column(
        modifier = Modifier
            .fillMaxSize()
            .background(Color.White)
    ) {
        MainHeader(
            title = "Glance Widget Example",
            onBackIconClicked = onBackEvent
        )

        LazyColumn(
            modifier = Modifier.fillMaxSize(),
            contentPadding = PaddingValues(16.dp),
            verticalArrangement = Arrangement.spacedBy(16.dp)
        ) {
            item { GlanceOverviewCard() }
            item { WidgetHierarchyCard() }
        }
    }
}

@Composable
private fun GlanceOverviewCard() {
    Card(
        modifier = Modifier.fillMaxWidth(),
        elevation = 4.dp,
        shape = RoundedCornerShape(12.dp)
    ) {
        Column(
            modifier = Modifier.padding(16.dp)
        ) {
            Text(
                text = "üì± GlanceÎûÄ?",
                fontSize = 18.sp,
                fontWeight = FontWeight.Bold,
                color = Color(0xFF1976D2)
            )

            Spacer(modifier = Modifier.height(8.dp))

            Text(
                text = "GlanceÎäî Jetpack ComposeÎ•º ÏÇ¨Ïö©ÌïòÏó¨ Android ÏúÑÏ†ØÏùÑ Îçî ÏâΩÍ≤å ÎßåÎì§ Ïàò ÏûàÍ≤å Ìï¥Ï£ºÎäî ÎùºÏù¥Î∏åÎü¨Î¶¨ÏûÖÎãàÎã§.",
                fontSize = 14.sp,
                color = Color.Gray
            )

            Spacer(modifier = Modifier.height(12.dp))

            Row(
                modifier = Modifier.fillMaxWidth(),
                horizontalArrangement = Arrangement.spacedBy(8.dp)
            ) {
                FeatureChip("RemoteViews ÎåÄÏ≤¥", Color(0xFF4CAF50))
                FeatureChip("Compose UI", Color(0xFF2196F3))
                FeatureChip("Í∞ÑÌé∏Ìïú Íµ¨Ï°∞", Color(0xFFFF9800))
            }
        }
    }
}

@Composable
private fun FeatureChip(text: String, color: Color) {
    Surface(
        modifier = Modifier,
        shape = RoundedCornerShape(16.dp),
        color = color.copy(alpha = 0.1f)
    ) {
        Text(
            text = text,
            modifier = Modifier.padding(horizontal = 12.dp, vertical = 6.dp),
            fontSize = 12.sp,
            color = color,
            fontWeight = FontWeight.Medium
        )
    }
}

@Composable
private fun WidgetHierarchyCard() {
    Card(
        modifier = Modifier.fillMaxWidth(),
        elevation = 4.dp,
        backgroundColor = Color(0xFFF3E5F5),
        shape = RoundedCornerShape(12.dp)
    ) {
        Column(
            modifier = Modifier.padding(16.dp)
        ) {
            Text(
                text = "üèóÔ∏è ÏúÑÏ†Ø Íµ¨Ï°∞",
                fontSize = 16.sp,
                fontWeight = FontWeight.Bold,
                color = Color(0xFF7B1FA2)
            )

            Spacer(modifier = Modifier.height(12.dp))

            HierarchyItem("1Ô∏è‚É£ App Manifest", "ÏúÑÏ†Ø ÏÑ†Ïñ∏ Î∞è ÏÑ§Ï†ï (AndroidManifest.xml)")
            HierarchyItem("2Ô∏è‚É£ GlanceAppWidgetReceiver", "ÏúÑÏ†Ø ÎùºÏù¥ÌîÑÏÇ¨Ïù¥ÌÅ¥ Í¥ÄÎ¶¨ (Receiver)")
            HierarchyItem("3Ô∏è‚É£ GlanceAppWidget", "ÏúÑÏ†ØÏùò UI Íµ¨ÏÑ± (StreaksWidget)")
            HierarchyItem("4Ô∏è‚É£ Glance UI", "Ïã§Ï†ú Composable UI (StreakContent)")
        }
    }
}

@Composable
private fun HierarchyItem(title: String, description: String) {
    Row(
        modifier = Modifier
            .fillMaxWidth()
            .padding(vertical = 4.dp),
        verticalAlignment = Alignment.CenterVertically
    ) {
        Box(
            modifier = Modifier
                .size(8.dp)
                .background(
                    Color(0xFF7B1FA2),
                    shape = androidx.compose.foundation.shape.CircleShape
                )
        )

        Spacer(modifier = Modifier.width(12.dp))

        Column {
            Text(
                text = title,
                fontSize = 14.sp,
                fontWeight = FontWeight.Medium
            )
            Text(
                text = description,
                fontSize = 12.sp,
                color = Color.Gray
            )
        }
    }
}

@Preview(showBackground = true)
@Composable
private fun GlanceWidgetExamplePreview() {
    GlanceWidgetExampleUI(
        onBackEvent = {}
    )
} 