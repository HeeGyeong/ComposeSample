---
description: 
globs: 
alwaysApply: false
---
---
description: "Kotlin & Jetpack Compose Code Style Guide with Korean comments"
globs: ""
alwaysApply: true
---

# Kotlin & Jetpack Compose Code Style Guide

## Overview
This rule defines comprehensive code style guidelines for Kotlin and Jetpack Compose development. References [CreateUICodeSnippet.md](mdc:app/src/main/java/com/example/composesample/docs/prompt/CreateUICodeSnippet.md).

## Technical Specifications
- **Language**: Kotlin
- **Framework**: Jetpack Compose
- **Architecture**: MVVM + Clean Architecture
- **Comments**: Write in Korean
- **File Coverage**: Write all parts without omission

## Naming Conventions
- Classes: PascalCase
- Functions: camelCase
- Variables: camelCase
- Constants: SCREAMING_SNAKE_CASE
- Composable Functions: PascalCase

## Composable Function Rules
- Must include Preview functions
- Parameters must have explicit default values
- Apply state hoisting
- Reusable components should be in separate files

## Code Formatting
- Indentation: 4 spaces
- Maximum line length: 120 characters
- Maximum function length: 50 lines
- Maximum file length: 500 lines

## Comment Rules
- Comments only for complex business logic
- Use KDoc format
- TODO comments must include resolution deadline

## Code Style Examples

### Color and Style Usage
```kotlin
Text(
    modifier = Modifier,
    text = title,
    color = Color.LightGray,
    style = getTextStyle(12)
)
```

### ViewModel Usage
- Reference [DIRules.md](mdc:app/src/main/java/com/example/composesample/docs/di/DIRules.md)
- Use Koin as DI framework

## Implementation Guidelines
- Implement UI that matches provided designs/requirements
- Maintain build integrity using dummy data
- Express full context of requirements
- Base implementation on comprehensive understanding
